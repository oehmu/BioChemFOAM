
		//solve(fvm::ddt(Ci) == - fvm::div(phi, Ci)+fvm::laplacian(nut,Ci));//Bx

		//solve(fvm::ddt(Ci2) == - fvm::div(phi, Ci2)+fvm::laplacian(nut,Ci2));//DOC 

		//solve(fvm::ddt(Ci3)  == - fvm::div(phi, Ci3)+fvm::laplacian(nut,Ci3));//DOP 

		//solve(fvm::ddt(Ci4) == - fvm::div(phi, Ci4)+fvm::laplacian(nut,Ci4));//DON

		//solve(fvm::ddt(Ci5)  == - fvm::div(phi, Ci5)+fvm::laplacian(nut,Ci5));//NH4

		//[2017_04-03]
		//solve(fvm::ddt(Ci6)  == - fvm::div(phi, Ci6)+fvm::laplacian(nut,Ci6));//NO3

		//solve(fvm::ddt(Ci7)  == - fvm::div(phi, Ci7)+fvm::laplacian(nut,Ci7));//DO

		//solve(fvm::ddt(Ci8)  == - fvm::div(phi, Ci8)+fvm::laplacian(nut,Ci8));//COD

		//solve(fvm::ddt(Ci9) == - fvm::div(phi, Ci9)+fvm::laplacian(nut,Ci9));//POC

		//solve(fvm::ddt(Ci10) == - fvm::div(phi, Ci10)+fvm::laplacian(nut,Ci10));//POP

		//solve(fvm::ddt(Ci11) == - fvm::div(phi, Ci11)+fvm::laplacian(nut,Ci11));//PON


//Ci.correctBoundaryConditions();
//Ci2.correctBoundaryConditions();
//Ci3.correctBoundaryConditions();
//Ci4.correctBoundaryConditions();
//Ci5.correctBoundaryConditions();
//Ci6.correctBoundaryConditions();//[2017_04-03]
//Ci7.correctBoundaryConditions();
//Ci8.correctBoundaryConditions();
//Ci9.correctBoundaryConditions();
//Ci10.correctBoundaryConditions();
//Ci11.correctBoundaryConditions();

//[oehmu]